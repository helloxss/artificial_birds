// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wingbeat_pattern.proto

#ifndef PROTOBUF_wingbeat_5fpattern_2eproto__INCLUDED
#define PROTOBUF_wingbeat_5fpattern_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_wingbeat_5fpattern_2eproto();
void protobuf_AssignDesc_wingbeat_5fpattern_2eproto();
void protobuf_ShutdownFile_wingbeat_5fpattern_2eproto();

class JointAngleInfo;
class WingbeatPattern;

// ===================================================================

class JointAngleInfo : public ::google::protobuf::Message {
 public:
  JointAngleInfo();
  virtual ~JointAngleInfo();
  
  JointAngleInfo(const JointAngleInfo& from);
  
  inline JointAngleInfo& operator=(const JointAngleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const JointAngleInfo& default_instance();
  
  void Swap(JointAngleInfo* other);
  
  // implements Message ----------------------------------------------
  
  JointAngleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JointAngleInfo& from);
  void MergeFrom(const JointAngleInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float wing = 1;
  inline bool has_wing() const;
  inline void clear_wing();
  static const int kWingFieldNumber = 1;
  inline float wing() const;
  inline void set_wing(float value);
  
  // required float feather = 2;
  inline bool has_feather() const;
  inline void clear_feather();
  static const int kFeatherFieldNumber = 2;
  inline float feather() const;
  inline void set_feather(float value);
  
  // @@protoc_insertion_point(class_scope:proto.JointAngleInfo)
 private:
  inline void set_has_wing();
  inline void clear_has_wing();
  inline void set_has_feather();
  inline void clear_has_feather();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float wing_;
  float feather_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_wingbeat_5fpattern_2eproto();
  friend void protobuf_AssignDesc_wingbeat_5fpattern_2eproto();
  friend void protobuf_ShutdownFile_wingbeat_5fpattern_2eproto();
  
  void InitAsDefaultInstance();
  static JointAngleInfo* default_instance_;
};
// -------------------------------------------------------------------

class WingbeatPattern : public ::google::protobuf::Message {
 public:
  WingbeatPattern();
  virtual ~WingbeatPattern();
  
  WingbeatPattern(const WingbeatPattern& from);
  
  inline WingbeatPattern& operator=(const WingbeatPattern& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WingbeatPattern& default_instance();
  
  void Swap(WingbeatPattern* other);
  
  // implements Message ----------------------------------------------
  
  WingbeatPattern* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WingbeatPattern& from);
  void MergeFrom(const WingbeatPattern& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .proto.JointAngleInfo angles = 1;
  inline int angles_size() const;
  inline void clear_angles();
  static const int kAnglesFieldNumber = 1;
  inline const ::proto::JointAngleInfo& angles(int index) const;
  inline ::proto::JointAngleInfo* mutable_angles(int index);
  inline ::proto::JointAngleInfo* add_angles();
  inline const ::google::protobuf::RepeatedPtrField< ::proto::JointAngleInfo >&
      angles() const;
  inline ::google::protobuf::RepeatedPtrField< ::proto::JointAngleInfo >*
      mutable_angles();
  
  // @@protoc_insertion_point(class_scope:proto.WingbeatPattern)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::proto::JointAngleInfo > angles_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_wingbeat_5fpattern_2eproto();
  friend void protobuf_AssignDesc_wingbeat_5fpattern_2eproto();
  friend void protobuf_ShutdownFile_wingbeat_5fpattern_2eproto();
  
  void InitAsDefaultInstance();
  static WingbeatPattern* default_instance_;
};
// ===================================================================


// ===================================================================

// JointAngleInfo

// required float wing = 1;
inline bool JointAngleInfo::has_wing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JointAngleInfo::set_has_wing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JointAngleInfo::clear_has_wing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JointAngleInfo::clear_wing() {
  wing_ = 0;
  clear_has_wing();
}
inline float JointAngleInfo::wing() const {
  return wing_;
}
inline void JointAngleInfo::set_wing(float value) {
  set_has_wing();
  wing_ = value;
}

// required float feather = 2;
inline bool JointAngleInfo::has_feather() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JointAngleInfo::set_has_feather() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JointAngleInfo::clear_has_feather() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JointAngleInfo::clear_feather() {
  feather_ = 0;
  clear_has_feather();
}
inline float JointAngleInfo::feather() const {
  return feather_;
}
inline void JointAngleInfo::set_feather(float value) {
  set_has_feather();
  feather_ = value;
}

// -------------------------------------------------------------------

// WingbeatPattern

// repeated .proto.JointAngleInfo angles = 1;
inline int WingbeatPattern::angles_size() const {
  return angles_.size();
}
inline void WingbeatPattern::clear_angles() {
  angles_.Clear();
}
inline const ::proto::JointAngleInfo& WingbeatPattern::angles(int index) const {
  return angles_.Get(index);
}
inline ::proto::JointAngleInfo* WingbeatPattern::mutable_angles(int index) {
  return angles_.Mutable(index);
}
inline ::proto::JointAngleInfo* WingbeatPattern::add_angles() {
  return angles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::JointAngleInfo >&
WingbeatPattern::angles() const {
  return angles_;
}
inline ::google::protobuf::RepeatedPtrField< ::proto::JointAngleInfo >*
WingbeatPattern::mutable_angles() {
  return &angles_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_wingbeat_5fpattern_2eproto__INCLUDED
